@using Microsoft.AspNetCore.Routing
@model StreetTalk.Controllers.PublicPostViewModel

@{
    ViewData["Title"] = "Publieke meldingen";
}

@section styles {
    <link href="~/css/postlist.css" rel="stylesheet" />
}

<div class="st-container">
    @if ((bool)ViewData["createSuccess"])
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            Melding maken geslaagt
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <h1 class="mb-3">Publieke meldingen</h1>
    <hr class="my-4" />
    <div class="w-100 d-flex flex-column mb-4" aria-label="Filters">
        <div class="d-flex flex-row align-items-center justify-content-between">
            <div id="filter-button" role="button">
                <img src="~/img/filter_list.svg" alt="Filter icoon" />
                <span class="d-inline-block ml-2">Filteren</span>
            </div>
        </div>
        <div id="filters">
            @using (Html.BeginForm("Index", "PublicPost", FormMethod.Get, new { @class = "m-3 p-3 card" }))
            {


                <div class="form-check">
                    @Html.CheckBoxFor(m => m.Filters.ShowClosedPosts)
                    @Html.Label("Sorteer op gesloten melding")
                </div>
                <div class="form-check">
                    @Html.CheckBoxFor(m => m.Filters.OnlyLikedPosts)
                    @Html.Label("Alleen gelikete posts")
                </div>
                <div class="form-check">
                    @{
                        var showSortOptions = new SelectList(new List<object>{

                            new { value = "datum", text = "Datum"},
                            new { value = "likes", text = "Likes"  },
                            new { value = "views", text = "Views" }

                        }, "value", "text");
                    }
                    @Html.Label("Sorteeropties:")
                    @Html.DropDownListFor(m => m.Filters.SorteerOptie, showSortOptions, new { @class = "form-control" })
                </div>
                <div class="form-check">
                    @Html.Label("Zoekopdracht:")
                    @Html.TextBoxFor(m => m.Filters.ZoekFilter)
                </div>

                <input type="submit" value="Toepassen" class="btn btn-primary form-control mt-3" />
            }

        </div>
    </div>
    <ul id="meldingen" class="flex-grow-1 undecorated-list d-flex flex-column" aria-label="Meldingen lijst">
        @foreach (var post in Model.Posts)
        {
            <li aria-label="Melding: @post.Post.Title">
                <partial name="_PostRow" for="@post" />
            </li>
        }
    </ul>
    <div class="d-flex flex-row">
        @Html.ActionLink("Vorige", "Index", new RouteValueDictionary {
             {"Filters.ShowClosedPosts", Model.Filters.ShowClosedPosts },
             {"page", Model.PreviousPage}
        }, new { @class = "btn btn-secondary mr-3" })
        @Html.ActionLink("Volgende", "Index", new RouteValueDictionary {
             {"Filters.ShowClosedPosts", Model.Filters.ShowClosedPosts },
             {"page", Model.NextPage}
        }, new { @class = "btn btn-secondary" })
    </div>
</div>